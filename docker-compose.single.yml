version: "3.3"

services:
  # proxy:
  #   image: traefik:v2.2

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: on-failure
    logging:
      options:
        max-size: "20m"
        max-file: "10"

  # pgadmin:
  #   image: dpage/pgadmin4:${TAG-latest}
  #   depends_on:
  #     - db
  #   env_file:
  #     - .env

  # queue:
  #   image: rabbitmq:3
  # flower:
  #   image: mher/flower:0.9.7
  
  backend-fastapi-project:
    image: 'backend-fastapi-project:${TAG-latest}'
    depends_on:
      - db
    env_file:
      - ./.env
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SERVER_HOST=http://${DOMAIN}
    ports:
      - "7001:7001"
    volumes:
      - ./backend/fastapi-project/:/app
    build:
      context: ./backend/fastapi-project
      dockerfile: Dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
   
  # celeryworker:
  #   image: '${DOCKER_IMAGE_CELERYWORKER?Variable not set}:${TAG-latest}'
 
  # frontend-vitepress-docs:
  #   image: 'frontend-vitepress-docs:${TAG-latest}'
  #   build:
  #     context: ./frontend/vitepress-docs
  #     args:
  #       FRONTEND_ENV: ${FRONTEND_ENV-production}

  # frontend-next-client:
  #   image: 'frontend-next-client:${TAG-latest}'
  #   build:
  #     context: ./frontend/next-client
  #     args:
  #       FRONTEND_ENV: ${FRONTEND_ENV-production}
 
  # frontend-react-dashboard:
  #   image: 'frontend-react-dashboard:${TAG-latest}'
  #   build:
  #     context: ./frontend/react-dashboard
 
volumes:
  db-data:

# networks:
#   traefik-public:
#     # Allow setting it to false for testing
#     external: ${TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL-true}