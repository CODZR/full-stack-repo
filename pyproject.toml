[tool.poetry]
name = "dbt-dagster-poetry"
version = "0.0.1"
description = ""
authors = ["CODZR <975336710@qq.com>"]
readme = "README.md"
packages = [{include = "dagster_project"}]

[[tool.poetry.source]]
name = "ali"
url = "https://mirrors.aliyun.com/pypi/simple/"
priority = "primary"


[tool.poetry.dependencies]
python = "^3.11"
dbt-core = "^1.7.7"
dbt-postgres = "^1.7.7"
dagster = "^1.6.3"
Jinja2 = "^3.1.3"
numpy = "^1.26.4"
scipy = "^1.12.0"
dagster-dbt = "^0.22.3"
plotly = "^5.18.0"
dbt-duckdb = "^1.7.1"
dagster-duckdb = "^0.22.4"
python-dotenv = "^1.0.1"
pandas = "^2.0.0"
dagster-duckdb-pandas = "^0.22.3"

[tool.poetry.group.dev.dependencies]
sqlfluff = "^2.3.5"
dagit = "^1.6.3"
pre-commit = "^3.4.0"
dbt = "^1.0.0.35.25"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.sqlfluff.core]
dialect = "ansi"
templater = "jinja"
sql_file_exts = ".sql"
max_line_length = 100

[tool.sqlfluff.indentation]
indented_joins = false
indented_using_on = true
template_blocks_indent = false
tab_space_size = 2
indent_unit = "space"

[tool.sqlfluff.templater]
unwrap_wrapped_queries = true

[tool.sqlfluff.templater.jinja]
apply_dbt_builtins = true

[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "lower"

[tool.sqlfluff.layout.type.comma]
line_position = "trailing"
